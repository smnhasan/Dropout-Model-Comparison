Arima(myts,order=c(0,1,0),seasonal=list(order= c(0,0,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(1,2,0),seasonal=list(order= c(1,1,0),period=12),lambda=1.155688)$aicc
Fit<-Arima(myts,order=c(1,1,0),seasonal=list(order= c(0,0,0),period=12),lambda=1.155688)
summary(Fit)
e<-resid(Fit)
tsdisplay(e)
checkresiduals(Fit)
tsdisplay(e^2)
forecast(Fit,36)
plot(forecast(Fit,12))
Fit<-Arima(myts,order=c(0,1,0),seasonal=list(order= c(0,0,0),period=12),lambda=1.155688)
summary(Fit)
e<-resid(Fit)
tsdisplay(e)
checkresiduals(Fit)
tsdisplay(e^2)
forecast(Fit,36)
plot(forecast(Fit,12))
Fit<-Arima(myts,order=c(0,1,1),seasonal=list(order= c(0,0,0),period=12),lambda=1.155688)
summary(Fit)
e<-resid(Fit)
tsdisplay(e)
checkresiduals(Fit)
tsdisplay(e^2)
forecast(Fit,36)
plot(forecast(Fit,12))
Fit<-Arima(myts,order=c(1,1,1),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)
summary(Fit)
e<-resid(Fit)
tsdisplay(e)
checkresiduals(Fit)
tsdisplay(e^2)
forecast(Fit,36)
plot(forecast(Fit,12))
Arima(myts,order=c(1,1,1),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(0,1,0),seasonal=list(order= c(0,0,0),period=12),lambda=1.155688)$aicc
auto.arima(myts)
Arima(myts,order=c(1,1,1),seasonal=list(order= c(1,1,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(1,1,1),seasonal=list(order= c(1,0,1),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(1,1,1),seasonal=list(order= c(2,0,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(1,1,0),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(0,1,0),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(1,2,0),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)$aicc
Arima(myts,order=c(1,1,0),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)$aicc
Fit<-Arima(myts,order=c(1,1,0),seasonal=list(order= c(1,0,0),period=12),lambda=1.155688)
summary(Fit)
e<-resid(Fit)
tsdisplay(e)
checkresiduals(Fit)
tsdisplay(e^2)
forecast(Fit,36)
plot(forecast(Fit,12))
install.packages("devtools")
if (!require("rspatial")) devtools::install_github('rspatial/rspatial')
library(rspatial)
if (!require("rspatial")) devtools::install_github('rspatial/rspatial')
library(rspatial)
d <- sp_data('precipitation')
if (!require("rspatial")) devtools::install_github('rspatial/rspatial')
require(foreign)
require(MASS)
require(pROC)
require(survey)
require(ResourceSelection)
require(ROCR)
require(car)
require(ggplot2)
require(maptools)
library(nnet)
library(FSA)
require(mapproj)
require(foreign)
library(caret)
require(MASS)
require(pROC)
require(survey)
require(ResourceSelection)
require(car)
require(ROCR)
require(ggplot2)
require(maptools)
setwd('F:\\ResearchProject\\Sabbir - ARI')
kr <- read.table("ARI_CSV.csv",sep=',',header=T)
sapply(kr,function(x) sum(is.na(x)))
kr$age <- ifelse(kr$HW1 <= 11,1,ifelse(kr$HW1 >= 12 & kr$HW1 <= 23,2,ifelse(kr$HW1 >= 24 & kr$HW1 <= 59,3,4)))
kr$V445 <- kr$V445/100 #mother's bmi
kr$bmi  <- ifelse(kr$V445<18.5,1,ifelse(kr$V445>=18.5 & kr$V445<=24.9,2,ifelse(kr$V445>=25 & kr$V445<=29.9,3,4)))
kr$media <- ifelse(kr$V121==1| kr$V120==1,1,0)
library(earth)
#important variable
model2 <- earth(kr$ARI ~ kr$ï..H43 + kr$age + kr$V106
+ kr$B4 + kr$V013 + kr$V190 + kr$V161
+ kr$V025 + kr$V113 +  kr$V116 + kr$V101
+ kr$bmi  + kr$media, data=kr)
ev <- evimp (model2)
ev
plot(varImp(model2))
dat <- scale(kr)
data <- data.frame(dat)
mymodel <- multinom(data$ARI ~ data$ï..H43 + data$age + data$V106
+ data$B4 + data$V013 + data$V190 + data$V161
+ data$V025 + data$V113 +  data$V116 + data$V101
+ data$bmi  + data$media, data=data)
p <- predict(mymodel,type="class")
summary(p)
tab <- table(p, data$ARI)
tab
sum(diag(tab))/sum(tab)
mymodel <- multinom(kr$ARI ~ kr$ï..H43 + kr$age + kr$V106
+ kr$B4 + kr$V013 + kr$V190 + kr$V161
+ kr$V025 + kr$V113 +  kr$V116 + kr$V101
+ kr$bmi  + kr$media, data=kr)
p <- predict(mymodel,type="class")
summary(p)
tab <- table(p, kr$ARI)
tab
sum(diag(tab))/sum(tab)
#kappa
confusionMatrix(factor(p), factor(kr$ARI))
summary(factor(kr$ARI))
library(ROCR)
p <- predict(mymodel,type="class")
ROCRpred <- prediction(p)
ROCRpred <- prediction(p, kr$ARI)
ROCRpred <- prediction(p, kr$ARI)
p <- predict(mymodel,type="class")
ROCRpred <- prediction(p, kr$ARI)
sapply(c(is.vector, is.matrix, is.list, is.data.frame), do.call, list(kr$ARI))
ROCRpred <- prediction(p, as.numeric(kr$ARI))
ROCRpred <- prediction(p, as.numeric(kr$ARI))
ROCRpred <- prediction(as.numeric(p), as.numeric(kr$ARI))
ROCRperf <- performance(ROCRpred, 'tpr', 'fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2, 1.7))
ROCRperf
auc.tmp <- performance(ROCRperf,"auc"); auc <- as.numeric(auc.tmp@y.values)
auc.tmp <- performance(ROCRpred,"auc"); auc <- as.numeric(auc.tmp@y.values)
auc
auc.tmp <- performance(ROCRpred,"auc")
auc <- as.numeric(auc.tmp@y.values)
auc
library(ROCR)
p <- predict(mymodel,type="class")
ROCRpred <- prediction(p, kr$ARI)
sapply(c(is.vector, is.matrix, is.list, is.data.frame), do.call, list(kr$ARI))
ROCRpred <- prediction(as.numeric(p), as.numeric(kr$ARI))
ROCRperf <- performance(ROCRpred, 'tpr', 'fpr')
auc.tmp <- performance(ROCRpred,"auc")
auc <- as.numeric(auc.tmp@y.values)
auc
library(neuralnet)
set.seed(333)
#With 5 Hidden leyar
n <- neuralnet(ARI ~ ï..H43 + age + V106
+ B4 + V013 + V190 + V161
+ V025 + V113 +  V116 + V101
+ bmi  + media,
data=data,
hidden = 5,
threshold=0.01,
act.fct = "logistic",
linear.output = FALSE,
lifesign='full',
rep=5,
algorithm="rprop+",
learningrate.limit = NULL,
learningrate.factor =
list(minus = 0.5, plus = 1.2),
learningrate=NULL,
stepmax=1e+05)
plot(n,rep=5)
# Confusion Matrix & Misclassification Error - training data
output <- compute(n, data)
p1 <- output$net.result
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(pred1, data$ARI)
tab1
summary(factor(pred1))
sum(diag(tab1))/sum(tab1)
confusionMatrix(factor(pred1), factor(kr$ARI))
p <- predict(n,type="class")
# Confusion Matrix & Misclassification Error - training data
output <- compute(n, data=data)
p <- predict(n,data=data,type="class")
p <- predict(n,type="class")
p
output
pred1
ROCRpred <- prediction(pred1, kr$ARI)
#With 5 Hidden leyar
n <- neuralnet(ARI ~ ï..H43 + age + V106
+ B4 + V013 + V190 + V161
+ V025 + V113 +  V116 + V101
+ bmi  + media,
data=data,
hidden = 5,
threshold=0.01,
act.fct = "logistic",
linear.output = FALSE,
lifesign='full',
rep=5,
algorithm="rprop+",
learningrate.limit = NULL,
learningrate.factor =
list(minus = 0.5, plus = 1.2),
learningrate=NULL,
stepmax=1e+05)
plot(n,rep=5)
# Confusion Matrix & Misclassification Error - training data
output <- compute(n, data)
p1 <- output$net.result
pred1 <- ifelse(p1>0.5, 1, 0)
tab1 <- table(pred1, data$ARI)
tab1
summary(factor(pred1))
sum(diag(tab1))/sum(tab1)
confusionMatrix(factor(pred1), factor(kr$ARI))
prob = compute(n, data )
prob.result <- prob$net.result
detach(package:neuralnet,unload = T)
library(ROCR)
nn.pred = prediction(prob.result, test$Type)
nn.pred = prediction(prob.result, kr$ARI)
pref <- performance(nn.pred, "tpr", "fpr")
plot(pref)
pref
auc.tmp <- performance(pref,"auc")
auc.tmp <- performance(nn.pred,"auc")
auc <- as.numeric(auc.tmp@y.values)
auc
library(MASS)
require(foreign)
require(MASS)
require(pROC)
require(survey)
require(ResourceSelection)
require(ROCR)
require(car)
require(ggplot2)
require(maptools)
library(nnet)
library(FSA)
library(caret)
require(mapproj)
setwd('F:\\ResearchProject\\Dropout\\Data & Codes')
kr <- as.data.frame(read.spss('Age.sav',use.value.labels=F),stringsAsFactors = FALSE)
sapply(kr,function(x) sum(is.na(x)))
WB2
str(kr)
kr <- as.data.frame(read.spss('Age.sav',use.value.labels=F),stringsAsFactors = FALSE)
sapply(kr,function(x) sum(is.na(x)))
WB2
str(kr)
kr$MA1 <- factor(kr$MA1,levels=c(1,0),labels = c('Yes','No'))
kr$age <- factor(kr$WB2 ,levels=c("15","16", "17"),labels = c('f','s', 'sev'))
kr$HH6 <- factor(kr$HH6,levels=c(1,2),labels = c('Urban','Rural'))
kr$HH7 <- factor(kr$HH7,levels=c(10,20,30,40,50,55,60),
labels = c('Barisal','Chittagong','Dhaka','Khulna',
'Rajshahi','Rangpur','Sylhet'))
kr$windex5 <- factor(kr$windex5,levels=c(1,2,3,4,5),
labels = c('Poorest','Poor','Middle','Rich','Richest'))
kr$religion <- factor(kr$religion,levels=c(1,2,3,4,6),
labels = c('Islam','Others','Others',
'Others','Others'))
kr$HL11 <- factor(kr$HL11,levels=c(1,2),labels = c('Yes','No'))
kr$HL13 <- factor(kr$HL13,levels=c(1,2),labels = c('Yes','No'))
kr$Dropout <- factor(kr$Dropout,levels=c(2,1),labels = c('Yes','No'))
kr$helevel <- factor(kr$helevel,levels=c(1,2,3,4,5),
labels = c('None','Primary Inc.', 'Primary Com.','Secondary Inc.', 'Secondary Com.'))
sapply(kr,function(x) sum(is.na(x)))
#mean
attach(kr)
mean(age)
sd(WB2)
Summarize(kr$WB2 ~ kr$Dropout,
data=kr,
digit=2)
t.test(kr$WB2 ~ kr$Dropout)
#chi-square test
xx <- xtabs(~kr$age +kr$Dropout, data=kr)
xx
rowSums(xx)
chisq.test(xx)
x <- round(prop.table(xx)*100, digit=2)
x
rowSums(x)
#missing
sapply(kr,function(x) sum(is.na(x)))
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion),
ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
family=binomial(link='logit'),data=kr)
summary(model)
exp(cbind(coef(model), confint(model)))
library(earth)
#important variable
varImp(model,top= 5)
model2 <- earth(relevel(factor(kr$Dropout), ref = "No")~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
data=kr)
ev <- evimp (model2)
ev
#Miss classification
mymodel <- multinom(relevel(factor(kr$Dropout), ref = "Yes") ~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel , data=kr)
library(MASS)
# Fit the full model
full.model <- lm(relevel(factor(kr$Dropout), ref = "Yes") ~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel , data=kr)
# Fit the full model
full.model <- lm(relevel(factor(kr$Dropout), ref = "Yes") ~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel , data=kr)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
#Miss classification
mymodel <- multinom(relevel(factor(kr$Dropout), ref = "Yes") ~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel , data=kr)
p <- predict(mymodel, kr)
tab <- table(p, kr$Dropout)
tab
sum(diag(tab))/sum(tab)
#R_Square
model$null.deviance
model$deviance
modelChi <- model$null.deviance - model$deviance
pseudo.R2 <- modelChi / model$null.deviance
#kappa
confusionMatrix(factor(p), factor(kr$Dropout))
library(MASS)
# Fit the full model
full.model <- lm(relevel(factor(kr$Dropout), ref = "Yes") ~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel , data=kr)
# Stepwise regression model
step.model <- stepAIC(mymodel, direction = "both",
trace = FALSE)
summary(step.model)
summary(mymodel)
#kappa
confusionMatrix(factor(p), factor(kr$Dropout))
library(MASS)
# Fit the full model
full.model <- lm(relevel(factor(kr$Dropout), ref = "Yes") ~ kr$WB2 + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + kr$religion +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel , data=kr)
# Stepwise regression model
step.model <- stepAIC(mymodel, direction = "both",
trace = FALSE)
summary(step.model)
# Stepwise regression model
step.model <- stepAIC(mymodel, direction = "forward",
trace = FALSE)
summary(step.model)
# Stepwise regression model
step.model <- stepAIC(mymodel, direction = "forward",
trace = FALSE)
summary(step.model)
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion),
ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
family=binomial(link='logit'),data=kr)
summary(model)
exp(cbind(coef(model), confint(model)))
# Stepwise regression model
step.model <- stepAIC(model, direction = "both",
trace = FALSE)
summary(step.model)
# Stepwise regression model
step.model <- stepAIC(model, direction = "both",
trace = FALSE)
summary(step.model)
exp(cbind(coef(step.model), confint(step.model)))
# Stepwise regression model
step.model <- stepAIC(model, direction = "both")
summary(step.model)
exp(cbind(coef(step.model), confint(step.model)))
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion),
ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
family=binomial(link='logit'),data=kr)
summary(model)
exp(cbind(coef(model), confint(model)))
# Stepwise regression model
step.model <- stepAIC(model, direction = "both")
summary(step.model)
# Stepwise regression model
step.model <- stepAIC(model, direction = "both",
trace = FALSE)
summary(step.model)
exp(cbind(coef(step.model), confint(step.model)))
# Stepwise regression model
step.model <- stepAIC(model, direction = "both")
summary(step.model)
summary(model)
summary(step.model)
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion),
ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
family=binomial(link='logit'),data=kr)
summary(model)
exp(cbind(coef(model), confint(model)))
# Stepwise regression model
step.model <- stepAIC(model, direction = "forward",
trace = FALSE)
summary(step.model)
exp(cbind(coef(step.model), confint(step.model)))
setwd('F:\\ResearchProject\\Dropout\\Data & Codes')
setwd('F:\\ResearchProject\\Dropout\\Data & Codes')
kr <- as.data.frame(read.spss('Age.sav',use.value.labels=F),stringsAsFactors = FALSE)
require(foreign)
require(MASS)
require(pROC)
require(survey)
require(ResourceSelection)
require(ROCR)
require(car)
require(ggplot2)
require(maptools)
library(nnet)
library(FSA)
library(caret)
require(mapproj)
setwd('F:\\ResearchProject\\Dropout\\Data & Codes')
kr <- as.data.frame(read.spss('Age.sav',use.value.labels=F),stringsAsFactors = FALSE)
sapply(kr,function(x) sum(is.na(x)))
kr$MA1 <- factor(kr$MA1,levels=c(1,0),labels = c('Yes','No'))
kr$age <- factor(kr$WB2 ,levels=c("15","16", "17"),labels = c('f','s', 'sev'))
kr$HH6 <- factor(kr$HH6,levels=c(1,2),labels = c('Urban','Rural'))
kr$HH6 <- factor(kr$HH6,levels=c(1,2),labels = c('Urban','Rural'))
kr$HH7 <- factor(kr$HH7,levels=c(10,20,30,40,50,55,60),
labels = c('Barisal','Chittagong','Dhaka','Khulna',
'Rajshahi','Rangpur','Sylhet'))
kr$windex5 <- factor(kr$windex5,levels=c(1,2,3,4,5),
labels = c('Poorest','Poor','Middle','Rich','Richest'))
kr$religion <- factor(kr$religion,levels=c(1,2,3,4,6),
labels = c('Islam','Others','Others',
'Others','Others'))
kr$religion <- factor(kr$religion,levels=c(1,2,3,4,6),
labels = c('Islam','Others','Others',
'Others','Others'))
kr$HL11 <- factor(kr$HL11,levels=c(1,2),labels = c('Yes','No'))
kr$religion <- factor(kr$religion,levels=c(1,2,3,4,6),
labels = c('Islam','Others','Others',
'Others','Others'))
kr$HL13 <- factor(kr$HL13,levels=c(1,2),labels = c('Yes','No'))
kr$Dropout <- factor(kr$Dropout,levels=c(2,1),labels = c('Yes','No'))
kr$helevel <- factor(kr$helevel,levels=c(1,2,3,4,5),
labels = c('None','Primary Inc.', 'Primary Com.','Secondary Inc.', 'Secondary Com.'))
sapply(kr,function(x) sum(is.na(x)))
#missing
sapply(kr,function(x) sum(is.na(x)))
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion),
ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
family=binomial(link='logit'),data=kr)
setwd('F:\\ResearchProject\\Dropout\\Data & Codes')
kr <- as.data.frame(read.spss('Age.sav',use.value.labels=F),stringsAsFactors = FALSE)
sapply(kr,function(x) sum(is.na(x)))
kr$MA1 <- factor(kr$MA1,levels=c(1,0),labels = c('Yes','No'))
kr$age <- factor(kr$WB2 ,levels=c("15","16", "17"),labels = c('f','s', 'sev'))
kr$HH6 <- factor(kr$HH6,levels=c(1,2),labels = c('Urban','Rural'))
kr$HH7 <- factor(kr$HH7,levels=c(10,20,30,40,50,55,60),
labels = c('Barisal','Chittagong','Dhaka','Khulna',
'Rajshahi','Rangpur','Sylhet'))
kr$windex5 <- factor(kr$windex5,levels=c(1,2,3,4,5),
labels = c('Poorest','Poor','Middle','Rich','Richest'))
kr$religion <- factor(kr$religion,levels=c(1,2,3,4,6),
labels = c('Islam','Others','Others',
'Others','Others'))
kr$HL11 <- factor(kr$HL11,levels=c(1,2),labels = c('Yes','No'))
kr$HL13 <- factor(kr$HL13,levels=c(1,2),labels = c('Yes','No'))
kr$Dropout <- factor(kr$Dropout,levels=c(2,1),labels = c('Yes','No'))
kr$helevel <- factor(kr$helevel,levels=c(1,2,3,4,5),
labels = c('None','Primary Inc.', 'Primary Com.','Secondary Inc.', 'Secondary Com.'))
sapply(kr,function(x) sum(is.na(x)))
#missing
sapply(kr,function(x) sum(is.na(x)))
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion),
ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No")
+ kr$helevel,
family=binomial(link='logit'),data=kr)
summary(model)
model <- glm( relevel(factor(kr$Dropout), ref = "No")~ kr$age + relevel(factor(kr$MA1), ref = "No") + kr$HH6 +
kr$HH7 + relevel(factor(kr$windex5), ref = "Richest") + relevel(factor(kr$religion), ref = "Others") +
relevel(factor(kr$HL11), ref = "No") + relevel(factor(kr$HL13), ref = "No") + kr$helevel,
family=binomial(link='logit'),data=kr)
summary(model)
exp(cbind(coef(model), confint(model)))
